@model QAManagementSystem.Models.Question

@{
    ViewBag.Title = "EdtiQuestion";
}

<h2>EdtiQuestion</h2>

@using (Html.BeginForm("UpdateQuestion", "QuestionPaper"))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Question</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.QuestionId)

    @*<div class="form-group">
            @Html.LabelFor(model => model.QuestionPaperId, "QuestionPaperId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QuestionPaperId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QuestionPaperId, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<input type="hidden" name="QuestionPaperId" value="@Model.QuestionId" />*@


    <div class="form-group">
        <label for="QuestionText" class="control-label col-md-2">Question Text<span style="color: red;">*</span></label>

        <div class="col-md-10">
            @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="OptionA" class="control-label col-md-2">Option A<span style="color: red;">*</span></label>

        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
            @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="OptionB" class="control-label col-md-2">Option B<span style="color: red;">*</span></label>

        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
            @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="OptionC" class="control-label col-md-2">Option C<span style="color: red;">*</span></label>

        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
            @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="OptionD" class="control-label col-md-2">Option D<span style="color: red;">*</span></label>

        <div class="col-md-10">
            @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
            @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="CorrectAnswer" class="control-label col-md-2">Correct Answer<span style="color: red;">*</span></label>

        <div class="col-md-10">
            @*@Html.EditorFor(model => model.CorrectAnswer, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.CorrectAnswer, new SelectList(new[] { "A", "B", "C", "D" }), "Select Correct Option", new { @class = "form-control", required = "required" })

            @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Edit" class="btn btn-primary" />
            <button type="button" class="btn btn-default" onclick="goBack()">Back</button>
        </div>
    </div>
</div>
}

<script>
    function goBack() {
        window.history.back();
    }
</script>