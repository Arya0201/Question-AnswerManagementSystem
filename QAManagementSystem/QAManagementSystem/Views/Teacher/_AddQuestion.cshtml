@model QAManagementSystem.Models.Question

@{ 
    string Role = Session["Role"].ToString();
}
<div>
    <!-- Display the single question -->
    @using (Html.BeginForm("Create", Role, new { id = ViewBag.QPId }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />


        <div class="form-group">
            <label for="QuestionText" class="control-label col-md-2">QuestionText<span style="color: red;">*</span></label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="OptionA" class="control-label col-md-2">Option A<span style="color: red;">*</span></label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
                @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="OptionB" class="control-label col-md-2">Option B<span style="color: red;">*</span></label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
                @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="OptionC" class="control-label col-md-2">Option C<span style="color: red;">*</span></label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
                @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="OptionD" class="control-label col-md-2">Option D<span style="color: red;">*</span></label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = ".*\\S.*" } })
                @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
            </div>
        </div>



    <div class="form-group">
        <label for="CorrectAnswer" class="control-label col-md-2">Correct Answer<span style="color: red;">*</span></label>

        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CorrectAnswer, new SelectList(new[] { "A", "B", "C", "D" }), "Select Correct Option", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <a href="@Url.Action("GetQuestionPaper", Role)" class="btn btn-default">Back</a>

            </div>
        </div>

    </div>
        }
</div>
